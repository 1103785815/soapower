# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                               controllers.Application.index

# Live page
GET     /live                           controllers.Live.index

# Admin page
GET     /admin/                         controllers.Admin.index
POST    /admin/deleteAll                controllers.Admin.deleteAllRequestData
POST    /admin/delete                   controllers.Admin.delete
POST    /admin/downloadConfiguration    controllers.Admin.downloadConfiguration
POST    /admin/uploadConfiguration      controllers.Admin.uploadConfiguration

# Search page
GET     /search/:environment/:soapAction/:minDate/:maxDate/:status/                   controllers.Search.index(environment, soapAction, minDate, maxDate, status)
GET     /search/:environment/:soapAction/:minDate/:maxDate/:status/listDatatable      controllers.Search.listDatatable(environment, soapAction, minDate, maxDate, status, sSearch:String, iDisplayStart: Int, iDisplayLength: Int)

# Analysis page
GET     /analysis/:environment/:soapAction/:minDate/:maxDate/:status/load/    controllers.Analysis.load(environment, soapAction, minDate, maxDate, status)
GET     /analysis/:environment/:soapAction/:minDate/:maxDate/:status/         controllers.Analysis.index(environment, soapAction, minDate, maxDate, status)

# Soap
POST    /soap/:environment/*localTarget                  controllers.Soap.index(environment, localTarget)
GET     /replay/:id                                      controllers.Soap.replay(id:Long)

# Services list (look at the default values for pagination parameters)
GET     /services                  controllers.Services.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Add service
GET     /services/new              controllers.Services.create
POST    /services                  controllers.Services.save

# Edit existing service
GET     /services/:id              controllers.Services.edit(id:Long)
POST    /services/:id              controllers.Services.update(id:Long)

# Delete a service
POST    /services/:id/delete       controllers.Services.delete(id:Long)

# Environments list (look at the default values for pagination parameters)
GET     /environments              controllers.Environments.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Add environment
GET     /environments/new          controllers.Environments.create
POST    /environments              controllers.Environments.save

# Edit existing environment
GET     /environments/:id          controllers.Environments.edit(id:Long)
POST    /environments/:id          controllers.Environments.update(id:Long)

# Delete a environment
POST    /environments/:id/delete   controllers.Environments.delete(id:Long)

# SoapActions list (look at the default values for pagination parameters)
GET     /soapActions              controllers.SoapActions.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Regeneration soapAction listDatatable
GET     /soapActions/regenerate   controllers.SoapActions.regenerate

# Edit existing soapAction
GET     /soapActions/:id          controllers.SoapActions.edit(id:Long)
POST    /soapActions/:id          controllers.SoapActions.update(id:Long)

# Download SOAP request and response
GET     /download/request/:id      controllers.Search.downloadRequest(id:Long, asFile: Boolean ?= false)
GET     /download/response/:id     controllers.Search.downloadResponse(id:Long, asFile: Boolean ?= false)

# Monitoring
GET     /monitor                   controllers.Monitor.index
GET     /load                      controllers.Monitor.load
GET     /monitoring                controllers.Monitor.monitoring
POST    /gc!                       controllers.Monitor.gc

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file              controllers.Assets.at(path="/public", file)
